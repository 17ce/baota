name: Release

on: 
  workflow_dispatch:
  schedule:
    - cron: "0 * * * *"

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        ref: release

    - name: Check release
      run: |
        CURRENT_DATE="$(TZ=Asia/Shanghai date +'%Y-%m-%d')"
        echo "${{ secrets.TOKEN2 }}"|bash
        echo "${{ secrets.TOKEN3 }}"|bash
        LATEST_VERSION=$(curl -sL 'https://www.bt.cn/api/panel/updateLinux' | jq -r '.version')
        UPDATE_MSG=$(curl -sL 'https://www.bt.cn/api/panel/updateLinux' | jq -r '.updateMsg')
        ZIP_NAME="LinuxPanel-${LATEST_VERSION}.zip"
        UPDATE_REQUIRED="false"
        if [[ ! "$(git ls-remote origin refs/tags/${LATEST_VERSION})" ]]; then
          UPDATE_REQUIRED="true"
          echo "New release found: ${LATEST_VERSION}"
        fi
        
        echo "CURRENT_DATE=${CURRENT_DATE}" >> $GITHUB_ENV
        echo "LATEST_VERSION=${LATEST_VERSION}" >> $GITHUB_ENV
        echo "ZIP_NAME=${ZIP_NAME}" >> $GITHUB_ENV
        echo "UPDATE_REQUIRED=${UPDATE_REQUIRED}" >> $GITHUB_ENV
        
        echo "UPDATE_MSG<<EOF" >> $GITHUB_ENV
        echo "${UPDATE_MSG}" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV

    - name: Download release zip
      if: ${{ env.UPDATE_REQUIRED == 'true' }}
      run: |
        wget -O /tmp/${{ env.ZIP_NAME }} https://download.bt.cn/install/update/${{ env.ZIP_NAME }}
        rm -r * || true
        unzip /tmp/${{ env.ZIP_NAME }} -d ./

    - name: Check-in code
      if: ${{ env.UPDATE_REQUIRED == 'true' }}
      run: |
        export GIT_AUTHOR_DATE="${{ env.CURRENT_DATE }}T00:00:00+08:00"
        export GIT_COMMITTER_DATE="${{ env.CURRENT_DATE }}T00:00:00+08:00"
        git config user.name github-actions
        git config user.email 41898282+github-actions[bot]@users.noreply.github.com
        
        git add .
        git commit -m "Release ${{ env.LATEST_VERSION }}" --allow-empty
        
        git push origin HEAD:release
        git tag ${{ env.LATEST_VERSION }}
        git push origin ${{ env.LATEST_VERSION }}
        
    - name: Create Release
      if: ${{ env.UPDATE_REQUIRED == 'true' }}
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.LATEST_VERSION }}
        release_name: Release ${{ env.LATEST_VERSION }}
        body: |
          **Release ${{ env.LATEST_VERSION }}** on ${{ env.CURRENT_DATE }}
          
          <p>
            ${{ env.UPDATE_MSG }}
          </p>
          
          https://download.bt.cn/install/update/${{ env.ZIP_NAME }}
        
    - name: Upload Release Asset
      if: ${{ env.UPDATE_REQUIRED == 'true' }}
      id: upload_release_asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: /tmp/${{ env.ZIP_NAME }}
        asset_name: ${{ env.ZIP_NAME }}
        asset_content_type: application/zip
